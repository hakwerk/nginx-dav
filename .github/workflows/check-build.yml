name: Check and Build

on:
  push:
  schedule:
    - cron: '30 6 * * 6'
  workflow_dispatch:
    inputs:
      force_publish:
        type: boolean
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get_tags:
    runs-on: ubuntu-latest
    outputs:
      nginx_tags: ${{ steps.nginx.outputs.tags }}
    steps:
      - name: Find latest nginx release tags
        id: nginx
        uses: hakwerk/gha-git-repo-tags@v1
        with:
          repository: nginx/nginx
          limit: 5
          reverse: true

  prepare:
    needs: get_tags
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nginx_tag: ${{ fromJson( needs.get_tags.outputs.nginx_tags ) }}
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Strip prefix from version, derive architecture from matrix.platform
        run: |
          TAG=${{ matrix.nginx_tag }}
          echo "VERSION=${TAG#release-}" >> $GITHUB_ENV
          ARCH="${{ matrix.platform }}"
          echo "ARCHITECURE=${ARCH#linux/}" >> $GITHUB_ENV

      - name: Show latest nginx version
        run: echo "** Checking nginx version $VERSION"

      - name: Check if we have that version already
        id: our_meta
        uses: hakwerk/gha-docker-registry-tag-info@v2
        with:
          image: "${{ github.repository }}:${{ env.VERSION }}"
          architecture: "${{ env.ARCHITECURE }}"
        continue-on-error: true

      - name: Show our metadata
        run: echo "** Our digest is ${{ steps.our_meta.outputs.digest }}"

      - name: Check if the official nginx image has that version already
        id: nginx_meta
        uses: hakwerk/gha-docker-registry-tag-info@v2
        with:
          image: "nginx:${{ env.VERSION }}"
          architecture: "${{ env.ARCHITECURE }}"

      - name: Print image metadata
        run: |
          echo "** Nginx digest is ${{ steps.nginx_meta.outputs.digest }}"

      - name: Set outputs
        id: set-outputs
        run: |
          echo "nginx-digest-${{ env.VERSION }}-$(echo '${{ matrix.platform }}' | tr / -)=${{ steps.nginx_meta.outputs.digest }}" >> "${GITHUB_OUTPUT}"
          echo "push-${{ env.VERSION }}-$(echo '${{ matrix.platform }}' | tr / -)=${{ steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish }}" >> "${GITHUB_OUTPUT}"
          echo "version-${{ env.VERSION }}=${{ env.VERSION }}" >> "${GITHUB_OUTPUT}"

      - uses: hakwerk/gha-composite-actions/build-nginx@main
        if: ${{ steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish }}
        with:
          nginx_tag: ${{ env.VERSION }}
          nginx-digest-linux-amd64: ${{ steps.set-outputs.outputs.nginx-digest-linux-amd64 }}
          nginx-digest-linux-arm64: ${{ steps.set-outputs.outputs.nginx-digest-linux-arm64 }}
          dockerpwd: ${{ secrets.DOCKER_PASSWORD }}

    outputs:
      push: ${{ steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish }}

  push:
    needs:
      - get_tags
      - prepare
    runs-on: ubuntu-latest
    if: needs.prepare.outputs.push
    strategy:
      matrix:
        nginx_tag: ${{ fromJson( needs.get_tags.outputs.nginx_tags ) }}

    steps:
      - name: Strip prefix from version
        run: |
          TAG=${{ matrix.nginx_tag }}
          echo "VERSION=${TAG#release-}" >> $GITHUB_ENV

      - uses: hakwerk/gha-composite-actions/push-nginx@main
        with:
          nginx_tag: ${{ env.VERSION }}
          dockerpwd: ${{ secrets.DOCKER_PASSWORD }}
          mail_url: ${{ secrets.MAIL_CONNECTION }}
          mail_to: ${{ secrets.MAIL_TO }}

