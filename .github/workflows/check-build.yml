name: Check and Build

on:
  push:
  schedule:
    - cron: '30 6 * * 6'
  workflow_dispatch:
    inputs:
      force_publish:
        type: boolean
        required: false

jobs:
  check-newer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
      - name: Find latest nginx release / tag
        id: nginx
        uses: oprypin/find-latest-tag@v1
        with:
          repository: nginx/nginx

      - name: Strip prefix from version
        run: |
          TAG=${{ steps.nginx.outputs.tag }}
          echo "VERSION=${TAG#release-}" >> $GITHUB_ENV

      - name: Show latest nginx version
        run: echo "** nginx is at version $VERSION"

      - name: Check if we have that version already
        id: our_meta
        uses: hakwerk/gha-docker-registry-tag-info@v1
        with:
          image: "${{ github.repository }}:${{ env.VERSION }}"
          architecture: "${{ matrix.platform }}"
        continue-on-error: true

      - name: Show our metadata
        run: echo "** our digest is ${{ steps.our_meta.outputs.digest }}"

      - name: Check if the official nginx image has that version already
        id: nginx_meta
        if: steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish
        uses: hakwerk/gha-docker-registry-tag-info@v1
        with:
          image: "nginx:${{ env.VERSION }}"
          architecture: "${{ matrix.platform }}"

      - name: Print image metadata
        if: steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish
        run: |
          echo "** nginx digest is ${{ steps.nginx_meta.outputs.digest }}"

      - name: Checkout this repo
        if: steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish
        uses: actions/checkout@v4
        with:
          ref: "${{ github.head_ref }}"

      - name: Set the correct base image in Dockerfile
        if: steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: Dockerfile
          find: "nginx:mainline"
          replace: "nginx@${{ steps.nginx_meta.outputs.digest }}"
          regex: false

      - name: Set up docker buildx
        if: steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish
        uses: docker/login-action@v3
        with:
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"

      - name: Build and push
        if: steps.our_meta.outputs.digest == '' || github.event.inputs.force_publish
        uses: docker/build-push-action@v5
        with:
          platforms: "linux/${{ matrix.platform }}"
          push: true
          tags: "${{ github.repository }}:${{ env.VERSION }},${{ github.repository }}:latest"

      - name: Notify by email
        if: steps.our_meta.outputs.digest == ''
        uses: dawidd6/action-send-mail@v3
        with:
          connection_url: ${{secrets.MAIL_CONNECTION}}
          subject: "Built new docker image: ${{ github.repository }}:${{ env.VERSION }} (${{ matrix.platform }})"
          to: ${{secrets.MAIL_TO}}
          from: GitHub action
          body: Build job of ${{github.repository}} completed successfully for platform ${{ matrix.platform }}! Pushed new image with version tag ${{ env.VERSION }}.
